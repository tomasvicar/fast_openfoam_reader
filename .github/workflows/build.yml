name: Build & Test

on:
  push:
    branches: [ main, master ]
    tags: ["v*"]   # e.g. v0.1.0 will trigger publish
  pull_request:

jobs:
  # 1. Run tests (source build)
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-latest, macos-latest, windows-latest]
        # python-version: ["3.9", "3.10", "3.11"]
        os: [ubuntu-latest]
        python-version: ["3.10"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e .[test] pytest build cython

      - name: Run tests
        run: pytest -q

  # 2. Build wheels with cibuildwheel
  wheels:
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        # os: [ubuntu-latest, macos-latest, windows-latest]

    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Build wheels
        run: cibuildwheel --output-dir wheelhouse

      - name: Upload wheels as artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: wheelhouse/*

  # 3. Build sdist (source distribution) + publish on tag
  publish:
    needs: wheels
    runs-on: ubuntu-latest
    env:
      CIBW_BUILD: "cp310-manylinux_x86_64"   # only CPython 3.10 manylinux x86_64
      CIBW_SKIP: "pp* *-manylinux_i686 *-musllinux_*"  # skip PyPy, 32-bit, musllinux
      CIBW_ARCHS_LINUX: "x86_64"             # be explicit
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install build & twine
        run: |
          python -m pip install build twine

      - name: Build sdist
        run: python -m build --sdist --outdir dist

      - name: Download wheels
        uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          merge-multiple: true
          path: dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
